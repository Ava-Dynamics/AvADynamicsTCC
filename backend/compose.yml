name: score
services:
  db:
    image: postgres:latest
    container_name: dbscore
    volumes:
      - db_data_score:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    env_file:
      - .env
    networks:
      - app-score
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  dbsuperscore:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - db_data_score_super:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT_SUPER}:5432
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST_SUPER}
      POSTGRES_PORT: ${POSTGRES_PORT_SUPER}
      POSTGRES_DB: ${POSTGRES_DB_SUPER}
      POSTGRES_USER: ${POSTGRES_USER_SUPER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_SUPER}
    env_file:
      - .env
    networks:
      - app-score
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'supertokens_user', '-d', 'supertokens']
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.0.2
    depends_on:
      dbsuperscore:
        condition: service_healthy
    ports:
      - 3900:3567
    env_file:
      - .env
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://${POSTGRES_USER_SUPER}:${POSTGRES_PASSWORD_SUPER}@dbsuperscore:5432/${POSTGRES_DB_SUPER}"
    networks:
      - app-score
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
      
  # redis:
  #   image: bitnami/redis:latest
  #   restart: unless-stopped
  #   ports:
  #     - ${REDIS_PORT}:6379
  #   env_file:
  #     - .env
  #   networks:
  #     - app-score

  # zookeeper:
  #   container_name: zookeeper
  #   image: quay.io/debezium/zookeeper:latest
  #   ports:
  #     - 2181:2181
  #     - 2888:2888
  #     - 3888:3888
      
  # kafka:
  #   container_name: kafka
  #   image: quay.io/debezium/kafka:latest
  #   ports:
  #     - 9092:9092
  #   links:
  #     - zookeeper:zookeeper
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     - ZOOKEEPER_CONNECT=zookeeper:2181
  # connect:
  #   container_name: connect
  #   image: quay.io/debezium/connect:latest
  #   environment:
  #     - BOOTSTRAP_SERVERS=kafka:9092
  #     - GROUP_ID=1
  #     - CONFIG_STORAGE_TOPIC=my_connect_configs
  #     - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #     - STATUS_STORAGE_TOPIC=my_source_connect_statuses
  #     - REST_HOST_NAME=0.0.0.0
  #   ports:
  #     - 8083:8083
  #   links:
  #     - kafka:kafka
  #   depends_on:
  #     - kafka
      
volumes:
  db_data_score:
  db_data_score_super:

networks:
  app-score:
    driver: bridge
