// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id             Int           @id @default(autoincrement())
  email          String
  supertokenId   String        @unique
  name           String?
  cpf            String?
  job            String?
  createdAt      DateTime?
  score          Int
  imageProfile   String?
  config         Json?
  postsRef       posts[]
  usersMedalsRef usersMedals[]
  followingRef   following[]
  jorneyRef      jorney[]
}

model following {
  id      Int @id @default(autoincrement())
  usersId Int
  follow  Int

  usersRel users? @relation(fields: [follow], references: [id])
}

model newspaper {
  id          String   @unique
  source      Json?
  author      String
  title       String
  description String?
  url         String
  urlToImage  String?
  publishedAt DateTime
  content     String?
}

model medals {
  id            Int           @id @default(autoincrement())
  name          String
  description   String
  image         String?
  userMedalsRef usersMedals[]
}

model usersMedals {
  id        Int    @id @default(autoincrement())
  userId    Int
  medalsId  Int
  userRel   users  @relation(fields: [userId], references: [id])
  medalsRel medals @relation(fields: [medalsId], references: [id])
}

model posts {
  id          Int      @id @default(autoincrement())
  usersId     Int
  content     String
  publishedAt DateTime
  usersRel    users    @relation(fields: [usersId], references: [id])
}

model jorney {
  id      Int    @id @default(autoincrement())
  usersId Int
  name    String
  type    String
  users   users  @relation(fields: [usersId], references: [id])
}
